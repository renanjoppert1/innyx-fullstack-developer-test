version: "3.7"

services:
  app:
    build:
      context: .
      dockerfile: ./docker/backend.dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend/:/var/www
    networks:
      - laravel

  # nginx
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "0:80"
    volumes:
      - ./backend/:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - laravel

  # db mysql
  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - ./.docker/mysql/dbdata:/var/lib/mysql
    ports:
      - "0:3306"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 300M
    restart: always
    ports:
      - 0:80
    networks:
      - laravel


  # FOR STAGE OR PRODUCTION ENVIROMENT
  # vue-app:
  #   build:
  #     context: .
  #     dockerfile: ./docker/frontend.dockerfile
  #   ports:
  #     - "0:80"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules

  # FOR DEV ENVIROMENT
  vue-app-dev:
    build:
      context: .
      dockerfile: ./docker/frontend-dev.dockerfile
    ports:
      - "0:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules


networks:
  laravel:
    driver: bridge
